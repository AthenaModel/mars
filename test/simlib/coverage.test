# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    coverage.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for coverage(n).
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}

# Import tcltest(n)
namespace import ::tcltest::test
 
#-----------------------------------------------------------------------
# Load the package to be tested

source ../../lib/simlib/pkgModules.tcl
namespace import ::marsutil::*
namespace import ::simlib::*

#-------------------------------------------------------------------
# validate

test validate-1.1 {Not a pair} -body {
    coverage validate {}
} -returnCodes {
    error
} -result {invalid coverage function "", expected "c d"}


test validate-1.2 {c is non-numeric} -body {
    coverage validate {NONESUCH 1000}
} -returnCodes {
    error
} -result {invalid c "NONESUCH", should be non-negative number}


test validate-1.3 {c is negative} -body {
    coverage validate {-0.1 1000}
} -returnCodes {
    error
} -result {invalid c "-0.1", should be non-negative number}


test validate-1.4 {d is non-numeric} -body {
    coverage validate {25 NONESUCH}
} -returnCodes {
    error
} -result {invalid d "NONESUCH", should be positive number}


test validate-1.5 {d is zero} -body {
    coverage validate {25 0}
} -returnCodes {
    error
} -result {invalid d "0", should be positive number}


#-------------------------------------------------------------------
# eval

test eval-1.1 {personnel is 0} -body {
    format %.2f [coverage eval {25 1000} 0 10000]
} -result {0.00}


test eval-1.2 {personnel is 250} -body {
    format %.2f [coverage eval {25 1000} 250 10000]
} -result {0.67}

test eval-1.3 {population is 0} -body {
    format %.2f [coverage eval {25 1000} 250 0]
} -result {0.00}

#-------------------------------------------------------------------
# Cleanup

tcltest::cleanupTests








