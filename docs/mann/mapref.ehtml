<manpage {marsutil(n) mapref(n)} "Generic map projection">

<section SYNOPSIS>

<pre>
package require marsutil <version>
namespace import ::marsutil::mapref
</pre>

<itemlist>

<section DESCRIPTION>

Instances of the <xref mapref(n)> type are map
<xref projection(i)> objects suitable for use with
<xref mapcanvas(n)>.  <xref mapref(n)> implements a 
non-geographic map projection for arbitrary map images.<p>

<subsection "Map Coordinates">

Map units are defined by dividing the longer of the image's
pixel width or height into 1000 equal segments numbered 0 to 999.  The
longer of the shorter of the two sides is referenced with the same
units; so a 2000x1000 map would have dimensions 999x499 in map units.<p>

Map units are double-precision floating point numbers.<p>

<subsection "Map Reference Strings">

A <xref mapref(n)> map reference string is a six-digit alphanumeric
string which encodes the map coordinates.  A coordinate's hundred's place
is converted to a letter A-K (skipping I), and the decimal fraction is
rounded.  Thus, (123.4, 567.8) is encoded as "<code>B23F68</code>".<p>

<subsection "Zoom Factors">

Note that the <xref mapcanvas(n)> can display a given map
at a variety of zoom factors.  The zoom factor is an integer number
between 1 and 300, interpeted as a percentage.  At a zoom factor of
200, for example, there are twice as many pixels in each direction.
The conversion between canvas coordinates and map coordinates must
take the zoom factor into account.<p>

<section COMMANDS>

<deflist commands>

<defitem mapref {mapref <i>name ?options?</i>}>

Creates a new mapref(n) object called <i>name</i>. The object is
represented as a new Tcl command in the caller's scope;
<iref mapref> returns the fully-qualified form of the
<i>name</i>.<p>

The <iref mapref> may be created with the following options:<p>

<deflist mapref options>

<defopt {-height <i>pixels</i>}>

Sets the height of the map in pixels, at a zoom factor of 100%.<p>

<defopt {-width <i>pixels</i>}>

Sets the width of the map in pixels, at a zoom factor of 100%.<p>

</deflist mapref options>

</deflist commands>

<section "INSTANCE COMMAND">

Each instance of the <iref mapref> object has the following subcommands:<p>

<deflist instance>

<defitem cget {<i>obj</i> cget <i>option</i>}>

Returns the value of the specified <i>option</i>.<p>

<defitem configure {<i>obj</i> configure <i>option value...</i>}>

Sets the value of one or more of the object's options.<p>

<defitem box {<i>obj</i> box}>

Returns the bounding box of the map in map units.<p>

<defitem c2m {<i>object</i> c2m <i>zoom cx cy</i>}>

Given a <i>zoom</i> factor and a canvas coordinate pair <i>cx</i> and
<i>cy</i>, returns a map coordinate pair as a list of two coordinates
<i>mx</i> and <i>my</i>.<p>

<defitem c2ref {<i>object</i> c2ref <i>zoom cx cy</i>}>

Given a <i>zoom</i> factor and a canvas coordinate pair <i>cx</i> and
<i>cy</i>, returns a map reference string.<p>

<defitem dim {<i>obj</i> dim}>

Returns the dimensions of the map in map units.<p>

<defitem m2c {<i>object</i> m2c <i>zoom mx my....</i>}>

Given a <i>zoom</i> factor and one or more map coordinate pairs
<i>mx</i> and <i>my</i>, returns a list of canvas 
coordinate pairs as a flat list of coordinates <i>cx cy...</i>.<p>

<defitem m2ref {<i>obj</i> m2ref <i>mx my...</i>}>

Given one or more map coordinate pairs <i>mx</i> and <i>my</i>, returns a
list of one or map reference strings.  Each coordinate is a separate
argument.<p>

<defitem ref2c {<i>object</i> ref2c <i>zoom ref...</i>}>

Given a <i>zoom</i> factor and one or more map reference strings,
returns a list of canvas coordinate pair as a flat list of coordinates
<i>cx cy...</i>.<p> 

<defitem ref2m {<i>obj</i> ref2m <i>ref...</i>}>

Given one or more map reference strings as arguments, returns a
corresponding list of <i>mx</i> and <i>my</i> map coordinates.<p>

<defitem "ref validate" {<i>obj</i> ref validate <i>ref...</i>}>

Given one or more map reference strings as arguments, validates
each. Throws an error with <code>-errorcode</code> <b>INVALID</b> if
any reference string is invalid.<p>

</deflist instance>

<section "SEE ALSO">

<xref projection(i)>, <xref mapcanvas(n)>

<section ENVIRONMENT>

Requires Tcl 8.5 or later.

To use this package in a Tcl script, the environment variable
<code>TCLLIBPATH</code> must include the parent of the package directory.

<section AUTHOR>

Will Duquette<p>

<section HISTORY>

Original package.

</manpage>








