<manpage {marsgui(n) finder(n)} "Text Search Widget">

<section SYNOPSIS>

<pre>
package require marsgui <version>
namespace import ::marsgui::*.toolbar.finder
</pre>

<itemlist>

<section DESCRIPTION>

The finder(n) widget is used for controlling searching within other
widgets, including the <xref rotext(n)>, <xref logdisplay(n)> and
<xref loglist(n)> widgets.  It allows the user to enter a target
string; it provides a menu for selecting the target type, which may be
incremental, exact, wildcard, or regexp; and it provides buttons for
navigating through the instances of the target in the data being
searched.<p>

See the <xref EXAMPLE>, below, for details on how to connect
a finder(n) with a <xref rotext(n)> widget.<p>

<section COMMANDS>

This module defines the following command:<p>

<deflist commands>

<defitem finder {finder <i>pathName ?options...?</i>}>

Creates a new <iref finder> widget named <i>pathName</i>.<p>

The <iref finder> widget may be created with all the standard Tk frame
widget options, plus the following finder(n)-specific options:<p>

<deflist finder options>

<defopt {-findcmd <i>cmd</i>}>

Specifies the command the finder will use to request searches and
browse the search results.  This will usually be the "find" method
of a <xref rotext(n)> or similar widget.  The <xref EXAMPLE>
shows how to connect a finder(n) with a <xref rotext(n)> widget.<p>

<defopt {-width <i>chars</i>}>

Specifies the character width of the finder(n)'s text entry field.
Defaults to 20.<p>

<defopt {-msgcmd <i>cmd</i>}>

Specifies a command to be used for passing messages to the user.
The command will be called with one additional argument, the message
to display; it will usually be displayed in the window's message line.<p>

<defopt {-targettype <i>type</i>}>

Sets the type of the target string: <b>incremental</b>, <b>exact</b>,
<b>wildcard</b>, or <b>regexp</b>.  Defaults to <b>exact</b>.  If the
target type is <b>incremental</b>, then an <b>exact</b>-match search
will be done incrementally as each character of the target string is
entered by the user.<p>

<defopt {-loglist <i>widget</i>}>

If set to the name of a <xref loglist(n)> widget, the finder(n) will
include buttons for searching through the logs displayed in the
loglist(n) using that widget's  <xref loglist(n) searchlogs>
and <xref loglist(n) stopsearch> methods.<p>

<defopt {-multicol <i>val</i>}>

A boolean option indicating whether or not the search string spans
multiple columns.  The intdended receiver of this will be the declared
<i>-loglist</i> if it exists.  If <i>-loglist</i> is not
specified, this option has no use.<p>

</deflist finder options>

</deflist commands>

<section "INSTANCE COMMAND">

<deflist instance>

<defitem found {$finder found <i>count instance</i></i>}>

This method is used by the recipient of the <code>-findcmd</code>
to notify the finder(n) of the search results.<p>

The <i>count</i> is the number of instances of the target which were
found; it will be 0 if no instances were found, or if the target is "".<p>

The <i>instance</i> identifies the instance which is currently
being highlighted on the display, if any.  If an instance is
highlighted, it will be a number from 0 to <i>count</i> - 1.
Otherwise it will be -1.<p>

The <xref EXAMPLE> shows how to connect the finder(n) to other widgets.<p>

</deflist>

<section EXAMPLE>

The finder(n) can be connected to any widget that supports the
"find/found" protocol, e.g., the <xref rotext(n)> and
<xref logdisplay(n)> widgets.  Here's a short script that connects
a finder(n) to a <xref rotext(n)> displaying an arbitrary text file.

<pre>
    #!/bin/sh
    # -*-tcl-*-
    # The next line restarts using wish \
    exec wish8.5 "$0" "$@"

    package require gui
    namespace import ::marsutil::* ::marsgui::*

    # FIRST, create a toolbar and a finder, and pack them on the top
    frame .bar

    finder .bar.finder               \
        -width   15                  \
        -findcmd [list .rotext find] \
        -msgcmd  puts

    pack .bar.finder -side right
    pack .bar -side top -fill x -expand 1

    # NEXT, create a rotext and fill in the rest with it.
    rotext .rotext                                   \
        -setgrid            1                        \
        -wrap               none                     \
        -highlightthickness 1                        \
        -borderwidth        1                        \
        -relief             sunken                   \
        -yscrollcommand     [list .yscroll set]      \
        -foundcmd           [list .bar.finder found]

    ttk::scrollbar .yscroll           \
        -orient vertical              \
        -command [list .rotext yview]

    pack .yscroll -side right -fill y
    pack .rotext -side right -fill both -expand 1

    # NEXT, load some text into the rotext
    if {[llength $argv] == 0} {
        puts "Usage: viewer filename"
        exit
    }

    set f [open [lindex $argv 0]]
    .rotext ins end [read $f]
    close $f

    .rotext see 1.0
</pre><p>

<section ENVIRONMENT>

marsgui(n) requires Tcl 8.5 or later.

To use marsgui(n) in a Tcl script, the environment variable
<code>TCLLIBPATH</code> must include the parent of the package
directory.

<section AUTHOR>

Dave Jaffe,
Will Duquette<p>

<section HISTORY>

6/24/2005 DJ Original package.<p>
6/09/2006 WHD Updated to support find/found protocol.

</manpage>








