<manpage {marsgui(n) textfield(n)} "Text Data Entry Field">

<section SYNOPSIS>

<pre>
package require marsgui <version>
namespace import ::marsgui::*
</pre>

<itemlist>

<section DESCRIPTION>

The textfield(n) widget is a <xref tk:ttk_entry(n)> configured as a
<xref field(i)> data entry field.  It is used for entering arbitrary
text strings.  It can also be coupled with a pop-up editor (e.g., a
color picker), in which case an "Edit" button appears at the right end
of the entry, and text cannot be edited directly.<p>

<section COMMANDS>

This module defines the following commands.<p>

<deflist commands>

<defitem textfield {textfield <i>pathName</i> ?<i>options...</i>?}>

Creates a new <iref textfield> widget named <i>pathName</i>, and
returns <i>pathName</i>.  The widget supports the following
options:<p>

<deflist options>

<defopt {-background <i>color</i>}>

Sets the color of the underlying hull frame, which is invisible unless
the <code>-borderwidth</code> is non-zero.<p>

<defopt {-borderwidth <i>width</i>}>

Sets the width of the widget border in pixels (or other screen
dimensions).  Defaults to 0.<p>

<defopt {-changecmd <i>command</i>}>

From <xref field(i)>.  Specifies a <i>command</i> to be called
whenever the field's value changes, for any reason whatsoever
(including explicit calls to <iref set>.  The new value is appended
to the <i>command</i> as an argument.<p>

<defopt {-state <i>state</i>}>

From <xref field(i)>.  textfield(i) widgets have states, just as the
normal <code>tk::</code> and <code>ttk::</code> widgets do.  The valid
states are <b>normal</b> and <b>disabled</b>.<p>

<defopt {-editcmd <i>cmd</i>}>

If given, the field with have an "Edit" button at the right end
of the field.  Pressing the button will call this <i>cmd</i> with two
additional arguments: the textfield(n) widget's name, and its current
value.  The command is expected to pop up some kind of editor dialog,
and return the new value.<p>

</deflist options>

</deflist commands>

<section "INSTANCE COMMAND">

textfield(n) widgets have the following subcommands:<p>

<deflist instance>

<defitem cget {<i>pathName</i> cget <i>option</i>}>

From <xref field(i)>.  Returns the value of the specified <i>option</i>.<p>

<defitem configure {<i>pathName</i> configure <i>option value...</i>}>

From <xref field(i)>.  Sets the value of one or more of the object's
options.<p>

<defitem get {<i>pathName</i> get}>

From <xref field(i)>.  Returns the field's current value.<p>

<defitem set {<i>pathName</i> set <i>value</i>}>

From <xref field(i)>.  Explicitly sets the field's <i>value</i>, and
calls the <code>-changecmd</code> if the value has really changed,
i.e., successive calls to <iref set> with the same <i>value</i> will
result in at most one call to the <code>-changecmd</code>.<p>

</deflist instance>


<section ENVIRONMENT>

marsgui(n) requires Tcl 8.5 or later.

To use marsgui(n) in a Tcl script, the environment variable
<code>TCLLIBPATH</code> must include the parent of the package
directory.

<section AUTHOR>

Will Duquette<p>

<section HISTORY>

Original package.

</manpage>










