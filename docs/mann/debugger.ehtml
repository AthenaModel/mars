<manpage {marsgui(n) debugger(n)} "Debugging Console">

<section SYNOPSIS>

<pre>
package require marsgui <version>
namespace import ::marsgui::*
</pre>

<itemlist>

<section DESCRIPTION>

<xref marsgui(n)> contains general-purpose (i.e.,
non-application-specific) GUI code for use in Mars.
This module defines the ::marsgui::debugger widget, a toplevel
window which can be invoked to help debug problems in a
a Tcl/Tk application.

At present, the ::marsgui::debugger provides the following features:

<ul>
  <li> A <xref cli(n)> which  provides command-line access to the main
       Tcl interpreter.

  <li> A <xref winbrowser(n)>, which provides information on any
       window in the Tk window tree.

  <li> A <xref cmdbrowser(n)>, which provides information on any
       command known to the Tcl interpreter.
       
  <li> A <xref modeditor(n)>, which allows the user to edit code in
       the running application, source it back in, and save it to disk
       as a mod file.
</ul>

<section OPTIONS>

The <iref debugger> widget has the same options as the
standard Tk "toplevel" widget; in addition, it provides the
following:

<deflist options>

<defopt {-app <i>flag</i>}>

<b>Read-only.</b>  The <i>flag</i> must be a Boolean value.  If it is
true, the created window assumes that it is the main window in the
application; closing the window will terminate the program.  The
option defaults to false.>

<defopt {-editordefaultdir <i>path</i>}>

Specifies the default directory for the editor tab's "File Save" dialog.
If unset, the dialog will open in the current working directory.

<defopt {-editorformatcmd <i>command</i>}>

Specifies the name of a command used to format an edited mod before saving
it.  The command takes two additional arguments, the file name and
the code to format.  It should return the formatted text.  The
application can use this to add boilerplate to the saved file.

</deflist>

<section COMMANDS>

This module defines the following command:

<deflist commands>

<defitem debugger {debugger <i>pathName ?options...?</i>}>

Creates a new toplevel debugger window named <i>pathName</i>.


<defitem "debugger new" {debugger new <i>?options...?</i>}>

Creates a new toplevel debugger window, with the specified options.

<defitem "debugger debug" {debugger debug ?<i>command...</i>?}>

Pops up a debugger, creating one if necessary, and attempts to load
<i>command...</i> into the debugger's mod editor.

</deflist commands>

<section "INSTANCE COMMAND">

<deflist instance>

<defitem configure {$debugger configure <i>option value...</i>}>

Sets the values of the specified <i>options</i>.

<defitem cget {$debugger cget <i>option</i>}>

Returns the value of the specified <i>option</i>.

<defitem edit {$debugger edit <i>command</i>}>

Loads the <i>command</i>'s definition into the debugger's
mod editor.

</deflist>

<section ENVIRONMENT>

This package requires Tcl/Tk 8.5 or later.

To use this package in a Tcl script, the environment variable
<code>TCLLIBPATH</code> must include the parent of the package
directory.

<section AUTHOR>

Will Duquette

<section HISTORY>

Original package.

</manpage>








